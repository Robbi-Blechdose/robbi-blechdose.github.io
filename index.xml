<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robbi Blechdose&#39;s Blog</title>
    <link>https://robbi-blechdose.github.io/</link>
    <description>Recent content on Robbi Blechdose&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://robbi-blechdose.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MX-5 KITT: Instrument Cluster</title>
      <link>https://robbi-blechdose.github.io/mx5kitt/03_instrument_cluster/</link>
      <pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/mx5kitt/03_instrument_cluster/</guid>
      <description>Arguably, one of the most recognizable parts of KITT is the retro-futuristic dashboard.
As such, my MX-5 KITT had to have one too! However, I shrunk the project to just the instrument cluster. This meant that getting it TÜV approved would be possible, and the amount of work would be manageable.
First order of business was to sketch out what I wanted to have. I eyeballed (pretty badly, admittedly) the shape of the cluster and started drawing: The first and the last sketchNow that I knew what I wanted, it was time to order some parts.</description>
    </item>
    
    <item>
      <title>MX-5 KITT: Center console</title>
      <link>https://robbi-blechdose.github.io/mx5kitt/02_center_console/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/mx5kitt/02_center_console/</guid>
      <description>In order to give the car a bit more of the sweet 80s retro-futurism vibes, I started work on a new center console piece.
Normally, there is an unused spot between the shifter and the power window switches (well, it contains and ashtray, but that is essentially unused space). I decided to design an inset which would replace the ashtray.
The idea was to add controls for a scanner and a few other useful bits and bobs.</description>
    </item>
    
    <item>
      <title>MX-5 KITT: Central locking</title>
      <link>https://robbi-blechdose.github.io/mx5kitt/01_central_locking/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/mx5kitt/01_central_locking/</guid>
      <description>As the MX-5 will be my daily driver, there are a few convenience mods I&amp;rsquo;m planning. Chief among these is a feature so standard on modern cars noone pays any attention to it: remote central locking.
Even though the MX-5 only has two doors, it&amp;rsquo;s still unnerving to have to use the key on both doors every time, and popping the trunk with the key gets old fast when you go shopping.</description>
    </item>
    
    <item>
      <title>MX-5 KITT: Introduction</title>
      <link>https://robbi-blechdose.github.io/mx5kitt/00_intro/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/mx5kitt/00_intro/</guid>
      <description>Recently, I bought a project car: A 1997 Mazda MX-5. It&amp;rsquo;s actually even a special edition called &amp;ldquo;MX-5 Classic&amp;rdquo;. It&amp;rsquo;s got all the latest (well, for 20 years ago anyway) things you&amp;rsquo;d want to have: ABS, double airbags, and luckily not much else. It&amp;rsquo;s a relatively simple car and thus great for modding!
It was only a short drive away, and after initial inspection with my friend Idefix, I immediately picked it up.</description>
    </item>
    
    <item>
      <title>K12 KITT: The Scanner</title>
      <link>https://robbi-blechdose.github.io/post/2020-04-27-k12-kitt-scanner/</link>
      <pubDate>Mon, 27 Apr 2020 20:44:22 +0200</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2020-04-27-k12-kitt-scanner/</guid>
      <description>I&amp;rsquo;ve (probably) been watching way too much Knight Rider recently. As a result, I&amp;rsquo;ve started modifying my car.
It&amp;rsquo;s by no means a KITT, or even a Trans Am. In fact, it&amp;rsquo;s a Nissan Micra K12.
The first thing I did was add the famous scanner:
The micra has a handy little space between the hood and the front bumper, perfect for a scanner. The problem is that that space is everything but big.</description>
    </item>
    
    <item>
      <title>GameBoy Color Game &#34;Robbi&#34;</title>
      <link>https://robbi-blechdose.github.io/post/2020-02-22-gbc-robbi/</link>
      <pubDate>Sat, 22 Feb 2020 11:25:46 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2020-02-22-gbc-robbi/</guid>
      <description>&amp;ldquo;Robbi&amp;rdquo; is a game I&amp;rsquo;ve been working on for a while now. It&amp;rsquo;s written in raw assembly for the GameBoy Color. Though it&amp;rsquo;s currently running on an emulator for easy development, it would run on real hardware as well.
Right now, there isn&amp;rsquo;t much in terms of content as I&amp;rsquo;m still creating the basic systems. However, a few basics are done: \
You can walk (or rather drive) around the map, which has a maximum size of 128x128 tiles.</description>
    </item>
    
    <item>
      <title>Car Gauge Unit: Graph Mode</title>
      <link>https://robbi-blechdose.github.io/post/2020-01-12-car-gauge-unit-graphmode/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2020-01-12-car-gauge-unit-graphmode/</guid>
      <description>Car Gauge Unit: Graph Mode The small screen at the right-hand side of the unit allows me to enter some data whenever I fill up the tank of my car:
 The amount of fuel I put in (in litres) How much the fuel cost (in € per litre) The total mileage of the car  With this, it calculates the gas mileage (in litres / 100km). However, I only had a total average as well as a &amp;ldquo;best ever&amp;rdquo; value.</description>
    </item>
    
    <item>
      <title>GB-J Compiler: Standard Library Documentation</title>
      <link>https://robbi-blechdose.github.io/gb-j-compiler_stdlib/</link>
      <pubDate>Tue, 05 Nov 2019 09:45:54 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/gb-j-compiler_stdlib/</guid>
      <description>0. Abbreviations    Abbreviation Description     Pos Position   VBK VRAM Bank   num Number of   spr Sprite   BG Background    Note: ref is currently not a standard data type, but must be provided in one of the two following forms:
 Asm.label for referencing a label in assembly code, which may be included as a generated data file or as inline assembly &amp;quot;TEXT GOES HERE&amp;quot; for creating string literals  1.</description>
    </item>
    
    <item>
      <title>GB-J Compiler: The language GB-J</title>
      <link>https://robbi-blechdose.github.io/gb-j-compiler_lang/</link>
      <pubDate>Tue, 05 Nov 2019 09:45:47 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/gb-j-compiler_lang/</guid>
      <description>1. Introduction The language &amp;ldquo;GB-J&amp;rdquo; is the one this compiler translates.
Its syntax borrows from C and Java for basic concepts, but differs in several aspects in order to make the language fit the target device better - the GameBoy.
2.1. Sections and Classes GB-J has two basic concepts for organising your project:
 sections, which hold statically allocated variables and the code accessing them classes, from which objects may be instantiated at runtime  Sections are faster than classes by several orders of magnitude, since memory accesses can be done directly, as opposed to having to calculate heap addresses for classes.</description>
    </item>
    
    <item>
      <title>S-RC Bots Screenshots</title>
      <link>https://robbi-blechdose.github.io/s-rc-bots_screenshots/</link>
      <pubDate>Wed, 30 Oct 2019 13:37:18 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/s-rc-bots_screenshots/</guid>
      <description>Back</description>
    </item>
    
    <item>
      <title>S-RC Bots</title>
      <link>https://robbi-blechdose.github.io/s-rc-bots_index/</link>
      <pubDate>Tue, 29 Oct 2019 14:20:38 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/s-rc-bots_index/</guid>
      <description>A game about building the very best bot from the parts you have! With that, you&amp;rsquo;ll have to do missions which will reward you with more parts.   Take a look here for more screenshots: Screenshots
Content  Your Bot can be customized in a variety of ways!
There are multiple chassis parts to swap out: The bot head, which is basically your command center.
The left and right torso are normally used for ammuniton.</description>
    </item>
    
    <item>
      <title>GB-J Compiler released</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-03-gb-j-compiler/</link>
      <pubDate>Sun, 27 Oct 2019 22:05:42 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-03-gb-j-compiler/</guid>
      <description>GB-J Compiler released! A compiler for a custom Java- and C-like language targeting the GameBoy  This is a project I&amp;rsquo;ve been working on for quite a while, and I&amp;rsquo;d like to continue doing so in the future.
It started out as a school project for my A-levels: Write a compiler.
Choosing the target  The original idea was to target some fantasy computer to reduce the complexity of the project.</description>
    </item>
    
    <item>
      <title>Car Gauge Unit</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-02-car-gauge-unit/</link>
      <pubDate>Sun, 27 Oct 2019 14:29:34 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-02-car-gauge-unit/</guid>
      <description>Car Gauge Unit A project involving Arduino, 3D-Printing and my car This project requires a bit of background information: My car has two standard DIN slots.
The lower one is used up by the car radio, but the upper one just contained a laughably small second glovebox.
Then suddenly, I had an idea: My car is too old to calculate its gas mileage itself, so I might as well add in a device capable of doing that.</description>
    </item>
    
    <item>
      <title>New Blog! 🎉</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-01-first-post/</link>
      <pubDate>Sun, 27 Oct 2019 13:52:30 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-01-first-post/</guid>
      <description>New Blog! 🎉 This is the new blog I&amp;rsquo;ll be using from now on. It&amp;rsquo;ll include posts on all kinds of topics, including (but not limited to):
  Gamedev (for the GameBoy)
  Gamedev (for PC)
  Miscellaneous Arduino and 3D-Printing projects
  </description>
    </item>
    
  </channel>
</rss>
