<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robbi Blechdose&#39;s Blog</title>
    <link>https://robbi-blechdose.github.io/</link>
    <description>Recent content on Robbi Blechdose&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 12 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://robbi-blechdose.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Car Gauge Unit: Graph Mode</title>
      <link>https://robbi-blechdose.github.io/post/2020-01-12-car-gauge-unit-graphmode/</link>
      <pubDate>Sun, 12 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2020-01-12-car-gauge-unit-graphmode/</guid>
      <description>Car Gauge Unit: Graph Mode The small screen at the right-hand side of the unit allows me to enter some data whenever I fill up the tank of my car:
 The amount of fuel I put in (in litres) How much the fuel cost (in â‚¬ per litre) The total mileage of the car  With this, it calculates the gas mileage (in litres / 100km). However, I only had a total average as well as a &amp;ldquo;best ever&amp;rdquo; value.</description>
    </item>
    
    <item>
      <title>GB-J Compiler: Standard Library Documentation</title>
      <link>https://robbi-blechdose.github.io/gb-j-compiler_stdlib/</link>
      <pubDate>Tue, 05 Nov 2019 09:45:54 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/gb-j-compiler_stdlib/</guid>
      <description>0. Abbreviations    Abbreviation Description     Pos Position   VBK VRAM Bank   num Number of   spr Sprite   BG Background    Note: ref is currently not a standard data type, but must be provided in one of the two following forms:
 Asm.label for referencing a label in assembly code, which may be included as a generated data file or as inline assembly</description>
    </item>
    
    <item>
      <title>GB-J Compiler: The language GB-J</title>
      <link>https://robbi-blechdose.github.io/gb-j-compiler_lang/</link>
      <pubDate>Tue, 05 Nov 2019 09:45:47 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/gb-j-compiler_lang/</guid>
      <description>1. Introduction The language &amp;ldquo;GB-J&amp;rdquo; is the one this compiler translates.
Its syntax borrows from C and Java for basic concepts, but differs in several aspects in order to make the language fit the target device better - the GameBoy.
2.1. Sections and Classes GB-J has two basic concepts for organising your project:
 sections, which hold statically allocated variables and the code accessing them classes, from which objects may be instantiated at runtime  Sections are faster than classes by several orders of magnitude, since memory accesses can be done directly, as opposed to having to calculate heap addresses for classes.</description>
    </item>
    
    <item>
      <title>S-RC Bots Screenshots</title>
      <link>https://robbi-blechdose.github.io/s-rc-bots_screenshots/</link>
      <pubDate>Wed, 30 Oct 2019 13:37:18 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/s-rc-bots_screenshots/</guid>
      <description>Back</description>
    </item>
    
    <item>
      <title>S-RC Bots</title>
      <link>https://robbi-blechdose.github.io/s-rc-bots_index/</link>
      <pubDate>Tue, 29 Oct 2019 14:20:38 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/s-rc-bots_index/</guid>
      <description>A game about building the very best bot from the parts you have! With that, you&amp;rsquo;ll have to do missions which will reward you with more parts.   Take a look here for more screenshots: Screenshots
Content Your Bot can be customized in a variety of ways!
There are multiple chassis parts to swap out: The bot head, which is basically your command center.
The left and right torso are normally used for ammuniton.</description>
    </item>
    
    <item>
      <title>GB-J Compiler released</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-03-gb-j-compiler/</link>
      <pubDate>Sun, 27 Oct 2019 22:05:42 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-03-gb-j-compiler/</guid>
      <description>GB-J Compiler released! A compiler for a custom Java- and C-like language targeting the GameBoy This is a project I&amp;rsquo;ve been working on for quite a while, and I&amp;rsquo;d like to continue doing so in the future.
It started out as a school project for my A-levels: Write a compiler.
Choosing the target The original idea was to target some fantasy computer to reduce the complexity of the project. I quickly abandoned that in favor of the GameBoy.</description>
    </item>
    
    <item>
      <title>Car Gauge Unit</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-02-car-gauge-unit/</link>
      <pubDate>Sun, 27 Oct 2019 14:29:34 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-02-car-gauge-unit/</guid>
      <description>Car Gauge Unit A project involving Arduino, 3D-Printing and my car This project requires a bit of background information: My car has two standard DIN slots.
The lower one is used up by the car radio, but the upper one just contained a laughably small second glovebox.
Then suddenly, I had an idea: My car is too old to calculate its gas mileage itself, so I might as well add in a device capable of doing that.</description>
    </item>
    
    <item>
      <title>New Blog! ðŸŽ‰</title>
      <link>https://robbi-blechdose.github.io/post/2019-10-27-01-first-post/</link>
      <pubDate>Sun, 27 Oct 2019 13:52:30 +0100</pubDate>
      
      <guid>https://robbi-blechdose.github.io/post/2019-10-27-01-first-post/</guid>
      <description> New Blog! ðŸŽ‰ This is the new blog I&amp;rsquo;ll be using from now on. It&amp;rsquo;ll include posts on all kinds of topics, including (but not limited to):
 Gamedev (for the GameBoy)
 Gamedev (for PC)
 Miscellaneous Arduino and 3D-Printing projects
  </description>
    </item>
    
  </channel>
</rss>